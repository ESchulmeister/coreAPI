// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using coreAPI.Data;

namespace coreAPI.Migrations
{
    [DbContext(typeof(UserDBContext))]
    [Migration("20210929184412_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("coreAPI.Data.AccessType", b =>
                {
                    b.Property<int>("ActId")
                        .HasColumnType("int")
                        .HasColumnName("actID");

                    b.Property<string>("ActName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("actName");

                    b.HasKey("ActId")
                        .HasName("PK_AccessTypes");

                    b.ToTable("AccessType");
                });

            modelBuilder.Entity("coreAPI.Data.AppDatabaseRole", b =>
                {
                    b.Property<int>("AdbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("adbID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdbAccessKey")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("adbAccessKey");

                    b.Property<bool?>("AdbActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("adbActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("AdbCreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adbCreatedBy");

                    b.Property<DateTime>("AdbCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("adbCreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AdbModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adbModifiedBy");

                    b.Property<DateTime>("AdbModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("adbModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AdbName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("adbName");

                    b.Property<string>("AdbRoleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("adbRoleName");

                    b.Property<int?>("AppId")
                        .HasColumnType("int")
                        .HasColumnName("appID");

                    b.HasKey("AdbId")
                        .HasName("PK_AppDatabaseRoles");

                    b.HasIndex("AppId");

                    b.ToTable("AppDatabaseRole");
                });

            modelBuilder.Entity("coreAPI.Data.AppPermission", b =>
                {
                    b.Property<int>("ApId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("apID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ApActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("apActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ApCreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apCreatedBy");

                    b.Property<DateTime>("ApCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("apCreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ApModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apModifiedBy");

                    b.Property<DateTime>("ApModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("apModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AppId")
                        .HasColumnType("int")
                        .HasColumnName("appID")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PermName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("permName");

                    b.HasKey("ApId")
                        .HasName("PK_Permissions");

                    b.HasIndex("AppId");

                    b.ToTable("AppPermission");
                });

            modelBuilder.Entity("coreAPI.Data.AppUser", b =>
                {
                    b.Property<int>("ApuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("apuID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppId")
                        .HasColumnType("int")
                        .HasColumnName("appID");

                    b.Property<byte[]>("ApuAccessKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("apuAccessKey");

                    b.Property<bool?>("ApuActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("apuActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ApuCreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apuCreatedBy");

                    b.Property<DateTime>("ApuCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("apuCreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ApuModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apuModifiedBy");

                    b.Property<DateTime>("ApuModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("apuModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UsrId")
                        .HasColumnType("int")
                        .HasColumnName("usrID");

                    b.HasKey("ApuId")
                        .HasName("PK_ApplicationUser");

                    b.HasIndex("AppId");

                    b.HasIndex(new[] { "UsrId", "AppId" }, "IX_AppUsers_Unique_usrID_appID")
                        .IsUnique();

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("coreAPI.Data.AppUserPermission", b =>
                {
                    b.Property<int>("PerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("perID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActId")
                        .HasColumnType("int")
                        .HasColumnName("actID");

                    b.Property<int>("ApId")
                        .HasColumnType("int")
                        .HasColumnName("apID");

                    b.Property<int?>("ApuId")
                        .HasColumnType("int")
                        .HasColumnName("apuID");

                    b.Property<bool?>("PerActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("perActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PerCreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("perCreatedBy");

                    b.Property<DateTime?>("PerCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("perCreatedDate");

                    b.Property<string>("PerMetadata")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("perMetadata");

                    b.Property<string>("PerModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("perModifiedBy");

                    b.Property<DateTime>("PerModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("perModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PerId")
                        .HasName("PK_AppUserPermissions");

                    b.HasIndex(new[] { "ApuId", "ApId" }, "IX_AppUserPermissions_Unique_apuID_apID")
                        .IsUnique()
                        .HasFilter("[apuID] IS NOT NULL");

                    b.ToTable("AppUserPermission");
                });

            modelBuilder.Entity("coreAPI.Data.AppUserSetting", b =>
                {
                    b.Property<int>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("setID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApuId")
                        .HasColumnType("int")
                        .HasColumnName("apuID");

                    b.Property<bool?>("SetActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("setActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("SetContentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("setContentTypeID");

                    b.Property<string>("SetCreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("setCreatedBy");

                    b.Property<DateTime?>("SetCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("setCreatedDate");

                    b.Property<string>("SetModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("setModifiedBy");

                    b.Property<DateTime>("SetModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("setModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SetName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("setName");

                    b.Property<string>("SetValue")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("setValue");

                    b.HasKey("SetId")
                        .HasName("PK_AppUserSettings");

                    b.HasIndex("ApuId");

                    b.HasIndex("SetContentTypeId");

                    b.ToTable("AppUserSetting");
                });

            modelBuilder.Entity("coreAPI.Data.Application", b =>
                {
                    b.Property<int>("AppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("appID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AppActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("appActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("AppCreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("appCreatedBy");

                    b.Property<DateTime>("AppCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("appCreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("AppFlags")
                        .HasColumnType("int")
                        .HasColumnName("appFlags");

                    b.Property<string>("AppModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("appModifiedBy");

                    b.Property<DateTime>("AppModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("appModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("appName");

                    b.HasKey("AppId")
                        .HasName("PK_Applications");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("coreAPI.Data.ContentType", b =>
                {
                    b.Property<int>("CntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cntID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CntName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cntName");

                    b.HasKey("CntId");

                    b.ToTable("ContentType");
                });

            modelBuilder.Entity("coreAPI.Data.User", b =>
                {
                    b.Property<int>("UsrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usrID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("UsrActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("usrActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UsrClock")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("usrClock");

                    b.Property<string>("UsrCreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usrCreatedBy");

                    b.Property<DateTime>("UsrCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("usrCreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UsrEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("usrEmail");

                    b.Property<string>("UsrFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usrFirstName");

                    b.Property<string>("UsrLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usrLastName");

                    b.Property<string>("UsrLogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usrLogin");

                    b.Property<string>("UsrModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usrModifiedBy");

                    b.Property<DateTime>("UsrModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("usrModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UsrId")
                        .HasName("PK_Users");

                    b.HasIndex(new[] { "UsrLogin" }, "UX_UsrLogin")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("coreAPI.Data.AppDatabaseRole", b =>
                {
                    b.HasOne("coreAPI.Data.Application", "App")
                        .WithMany("AppDatabaseRoles")
                        .HasForeignKey("AppId")
                        .HasConstraintName("FK_AppDatabaseRoles_Applications");

                    b.Navigation("App");
                });

            modelBuilder.Entity("coreAPI.Data.AppPermission", b =>
                {
                    b.HasOne("coreAPI.Data.Application", "App")
                        .WithMany("AppPermissions")
                        .HasForeignKey("AppId")
                        .HasConstraintName("FK_Permission_Application")
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("coreAPI.Data.AppUser", b =>
                {
                    b.HasOne("coreAPI.Data.Application", "App")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppId")
                        .HasConstraintName("FK_ApplicationUser_Applications")
                        .IsRequired();

                    b.HasOne("coreAPI.Data.User", "Usr")
                        .WithMany("AppUsers")
                        .HasForeignKey("UsrId")
                        .HasConstraintName("FK_ApplicationUser_Users")
                        .IsRequired();

                    b.Navigation("App");

                    b.Navigation("Usr");
                });

            modelBuilder.Entity("coreAPI.Data.AppUserSetting", b =>
                {
                    b.HasOne("coreAPI.Data.AppUser", "Apu")
                        .WithMany("AppUserSettings")
                        .HasForeignKey("ApuId")
                        .HasConstraintName("FK_AppUserSettings_AppUsers");

                    b.HasOne("coreAPI.Data.ContentType", "SetContentType")
                        .WithMany("AppUserSettings")
                        .HasForeignKey("SetContentTypeId")
                        .HasConstraintName("FK_AppUserSettings_ContentType");

                    b.Navigation("Apu");

                    b.Navigation("SetContentType");
                });

            modelBuilder.Entity("coreAPI.Data.AppUser", b =>
                {
                    b.Navigation("AppUserSettings");
                });

            modelBuilder.Entity("coreAPI.Data.Application", b =>
                {
                    b.Navigation("AppDatabaseRoles");

                    b.Navigation("AppPermissions");

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("coreAPI.Data.ContentType", b =>
                {
                    b.Navigation("AppUserSettings");
                });

            modelBuilder.Entity("coreAPI.Data.User", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
